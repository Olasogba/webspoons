{
	"info": {
		"_postman_id": "46d1af16-5807-4086-8eed-09f78f85d003",
		"name": "CodeServer-SampleRequestsForPatchAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Patch - Full Payload - Expect 200 with changed fields",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b96bf05-709a-4d89-b708-9e14697564b7",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Fields in request payload are updated\", function () {",
							"    var jsonData = JSON.parse(responseBody);",
							"    pm.expect(jsonData.externalId).to.eql(\"EXTERNALIDEDITED\");",
							"    pm.expect(jsonData.name).to.eql(\"Name-Edited\");",
							"    pm.expect(jsonData.sdlcSystem.id).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"externalId\": \"EXTERNALIDEDITED\",\n\t\"name\": \"Name-Edited\",\n\t\"sdlcSystem\": {\n\t\t\"id\": 1\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/projects/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"projects",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch - Payload with only externalId - Expect 200 and same name / system",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9c70212-61ec-426a-aaf4-590327f0de8b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Only fields available in request payload are updated\", function () {",
							"    var jsonData = JSON.parse(responseBody);",
							"    pm.expect(jsonData.externalId).to.eql(\"EXTERNALIDEDITED\");",
							"    pm.expect(jsonData.name).to.eql(\"Project One\");",
							"    pm.expect(jsonData.sdlcSystem.id).to.eql(3);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"externalId\": \"EXTERNALIDEDITED\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/projects/6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"projects",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch - Payload with only sdlcSystem.id - Expect 200 and same name / externalId",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f33d37b4-6fe6-4049-ab5a-378b92555c19",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Only fields available in request payload are updated\", function () {",
							"    var jsonData = JSON.parse(responseBody);",
							"    pm.expect(jsonData.externalId).to.eql(\"PROJECTTWO\");",
							"    pm.expect(jsonData.name).to.eql(\"Project Two\");",
							"    pm.expect(jsonData.sdlcSystem.id).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"sdlcSystem\": {\n\t\t\"id\": 1\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/projects/7",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"projects",
						"7"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch - Empty Payload - Expect 200 with no changed fields",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3250ba3d-d1e3-49ae-a286-ff8982d570a0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"No fields are updated\", function () {",
							"    var jsonData = JSON.parse(responseBody);",
							"    pm.expect(jsonData.externalId).to.eql(\"PROJECTTHREE\");",
							"    pm.expect(jsonData.name).to.eql(\"Project Three\");",
							"    pm.expect(jsonData.sdlcSystem.id).to.eql(3);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/projects/8",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"projects",
						"8"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch - Payload with null name - Expect 200 with name having been nullified",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c7f4a4c9-75a6-48aa-8989-16b49252fdc4",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Name is nullified\", function () {",
							"   var jsonData = JSON.parse(responseBody);",
							"    pm.expect(jsonData.name).to.eql(null);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": null\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/projects/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"projects",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch - Payload Containing Illegal Value - Expect 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f84dccdc-a1c5-4329-866a-a6577ff8449a",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"sdlcSystem\": {\n\t\t\"id\": \"Whatever\"\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/projects/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"projects",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch - Payload Containing Non Existing System - Expect 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9f8d8ee-6fab-4ad8-bca5-ae3b7eb46920",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"sdlcSystem\": {\n\t\t\"id\": 12345\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/projects/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"projects",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch - Illegal Path Variables - Expect 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15bacaee-58be-4ec4-b46a-966dc2cb6508",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/projects/whatever",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"projects",
						"whatever"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch - Invalid Path Variables - Expect 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fff73893-9f6c-4eea-9db6-6646c35298e6",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v2/projects/1234",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v2",
						"projects",
						"1234"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}